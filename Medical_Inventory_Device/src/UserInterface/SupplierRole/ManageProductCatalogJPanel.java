/*
 * ManageProductCatalogJPanel.java
 *
 * Created on September 24, 2008, 2:40 PM
 */
package UserInterface.SupplierRole;

import Business.Business;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Enterprise.Product;
import Business.Enterprise.ProductCatalog;
import Business.Enterprise.ProductItem;
import Business.Enterprise.SupplierEnterprise;
import Business.IntegerVerifier;
import Business.Organization.Organization;
import Business.StringVerifier;
import java.awt.CardLayout;
import javax.swing.InputVerifier;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

public class ManageProductCatalogJPanel extends javax.swing.JPanel {

    JPanel userProcessContainer;
    Enterprise enterprise;
    EcoSystem business;
    Organization o;
    SupplierEnterprise supplierenterprise;

    /**
     * Creates new form ManageProductCatalogJPanel
     */
    public ManageProductCatalogJPanel(JPanel upc, SupplierEnterprise supplierenterprise, EcoSystem business, Organization o) {
        initComponents();
        userProcessContainer = upc;

        // sNameTextField.setText(supplier.getFname());
        this.business = business;
        this.o = o;
        this.supplierenterprise = supplierenterprise;
        InputVerifier integerverifier = new IntegerVerifier();
        InputVerifier stringverifier = new StringVerifier();
        changeAvailabilityJTextFeild.setInputVerifier(integerverifier);
        refreshTable();
        
    }

    private void refreshTable() {
        int rowCount = productCatalog.getRowCount();
        DefaultTableModel model = (DefaultTableModel) productCatalog.getModel();
        for (int i = rowCount - 1; i >= 0; i--) {
            model.removeRow(i);
        }

        for (Product p : supplierenterprise.getProductCatalog().getProductCatalog()) {
            Object row[] = new Object[4];
            row[0] = p;
            row[1] = p.getModelNumber();
            row[2] = p.getPrice();
            row[3] = p.getAvailability();
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        productCatalog = new javax.swing.JTable();
        viewPButton = new javax.swing.JButton();
        createPButton = new javax.swing.JButton();
        searchPButton = new javax.swing.JButton();
        backButton4 = new javax.swing.JButton();
        delButton5 = new javax.swing.JButton();
        refreshBtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        productItemTbl = new javax.swing.JTable();
        changeAvailBtn = new javax.swing.JButton();
        changeAvailabilityJTextFeild = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Manage Product Catalog");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 10, -1, -1));

        productCatalog.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        productCatalog.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Product Name", "Product ID", "Price", "Availability"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(productCatalog);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 80, 500, 90));

        viewPButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        viewPButton.setText("View Product Detail >>");
        viewPButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewPButtonActionPerformed(evt);
            }
        });
        add(viewPButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 200, 220, -1));

        createPButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        createPButton.setText("Create New Product >>");
        createPButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createPButtonActionPerformed(evt);
            }
        });
        add(createPButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 240, 220, -1));

        searchPButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        searchPButton.setText("Search >>");
        searchPButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchPButtonActionPerformed(evt);
            }
        });
        add(searchPButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 240, 190, -1));

        backButton4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        backButton4.setText("<< Back");
        backButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButton4ActionPerformed(evt);
            }
        });
        add(backButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 490, 110, -1));

        delButton5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        delButton5.setText("Delete Product(s)");
        delButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delButton5ActionPerformed(evt);
            }
        });
        add(delButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 200, 190, -1));

        refreshBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        refreshBtn.setText("Refresh");
        refreshBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshBtnActionPerformed(evt);
            }
        });
        add(refreshBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 50, -1, -1));

        productItemTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ModelId", "SerialNumber"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(productItemTbl);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 380, 390, 90));

        changeAvailBtn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        changeAvailBtn.setText("Change Availability");
        changeAvailBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeAvailBtnActionPerformed(evt);
            }
        });
        add(changeAvailBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 330, 160, 30));

        changeAvailabilityJTextFeild.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeAvailabilityJTextFeildActionPerformed(evt);
            }
        });
        add(changeAvailabilityJTextFeild, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 340, 120, -1));

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton2.setText("ViewItems");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 280, 120, 30));
    }// </editor-fold>//GEN-END:initComponents
    private void viewPButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewPButtonActionPerformed
        // TODO add your handling code here:
        int row = productCatalog.getSelectedRow();
        if (row < 0) {
            return;
        }
        Product p = (Product) productCatalog.getValueAt(row, 0);
        ViewProductDetailJPanel vpdjp = new ViewProductDetailJPanel(userProcessContainer, p);
        userProcessContainer.add("ViewProductDetailJPanelSupplier", vpdjp);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_viewPButtonActionPerformed

    private void createPButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createPButtonActionPerformed
        ProductCatalog pcatalog = supplierenterprise.getProductCatalog();
        CreateNewProductJPanel cnpjp = new CreateNewProductJPanel(userProcessContainer, pcatalog);
        userProcessContainer.add("SupplierWorkAreaJPanel", cnpjp);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
        System.out.println("Creating a new product selected");
    }//GEN-LAST:event_createPButtonActionPerformed

    private void searchPButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchPButtonActionPerformed
        // TODO add your handling code here:
        ProductCatalog pcatalog = supplierenterprise.getProductCatalog();
        SearchForProductJPanel sfpjp = new SearchForProductJPanel(userProcessContainer, pcatalog);
        userProcessContainer.add("SearchForProductJPanel", sfpjp);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_searchPButtonActionPerformed

    private void backButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButton4ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backButton4ActionPerformed

    private void delButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delButton5ActionPerformed
        // TODO add your handling code here:

        int row = productCatalog.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(this, "please select a row");
            return;
        }
        Product p = (Product) productCatalog.getValueAt(row, 0);
        supplierenterprise.getProductCatalog().removeProduct(p);
        refreshTable();
    }//GEN-LAST:event_delButton5ActionPerformed

    private void refreshBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshBtnActionPerformed
        // TODO add your handling code here:

        refreshTable();
    }//GEN-LAST:event_refreshBtnActionPerformed

    private void changeAvailabilityJTextFeildActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeAvailabilityJTextFeildActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_changeAvailabilityJTextFeildActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        populateItemsTable();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void changeAvailBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeAvailBtnActionPerformed
        // TODO add your handling code here:
        if (changeAvailabilityJTextFeild.getText().length()>0) {

            int selectedrow = productCatalog.getSelectedRow();
            if (selectedrow < 0) {
                JOptionPane.showMessageDialog(this, "please select a row");
                return;
            }
            Product p = (Product) productCatalog.getValueAt(selectedrow, 0);
            int oldAvailability = p.getAvailability();
            int newAvailability = Integer.parseInt(changeAvailabilityJTextFeild.getText());
            p.additem(newAvailability);
            p.setAvailability(oldAvailability + newAvailability);
        } else {
            JOptionPane.showMessageDialog(this, "The textbox cannot be blank ");
        }
    }//GEN-LAST:event_changeAvailBtnActionPerformed

    private void populateItemsTable() {
        int selectedrow = productCatalog.getSelectedRow();
        if (selectedrow < 0) {
            JOptionPane.showMessageDialog(this, "please select a row");
            return;
        }
        Product p = (Product) productCatalog.getValueAt(selectedrow, 0);

        DefaultTableModel model = (DefaultTableModel) productItemTbl.getModel();
        model.setRowCount(0);

        for (ProductItem pi : p.getProductitemlist()) {
            Object row1[] = new Object[2];
            row1[0] = pi.getModelNumber();
            row1[1] = pi.getSerialNumber();

            model.addRow(row1);
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton4;
    private javax.swing.JButton changeAvailBtn;
    private javax.swing.JTextField changeAvailabilityJTextFeild;
    private javax.swing.JButton createPButton;
    private javax.swing.JButton delButton5;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable productCatalog;
    private javax.swing.JTable productItemTbl;
    private javax.swing.JButton refreshBtn;
    private javax.swing.JButton searchPButton;
    private javax.swing.JButton viewPButton;
    // End of variables declaration//GEN-END:variables

}
