/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.FinanceManagerRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Enterprise.PurchaseEnterprise;
import Business.Network.Network;
import Business.Order.OrderItem;
import Business.Organization.FinanceOrganization;
import Business.Organization.Organization;
import Business.Organization.SupplierOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.SupplierManagerTestWorkRequest;
import Business.WorkQueue.WorkRequest;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import sun.util.calendar.CalendarUtils;

/**
 *
 * @author hp
 */
public class FinanceManagerWorkAreaJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private UserAccount userAccount;
    private FinanceOrganization financeOrganization;
    private PurchaseEnterprise enterprise;
    private EcoSystem system;

    public FinanceManagerWorkAreaJPanel(JPanel userProcessContainer,
            UserAccount useraccount, FinanceOrganization organization, PurchaseEnterprise enterprise,
            EcoSystem system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = useraccount;
        this.financeOrganization = organization;
        this.enterprise = enterprise;
        this.system = system;
        populateRequestTable();
    }

    public void populateRequestTable() {

        DefaultTableModel model = (DefaultTableModel) requestTable.getModel();

        model.setRowCount(0);
        for (WorkRequest request : financeOrganization.getWorkQueue().getWorkRequestList()) {
            SupplierManagerTestWorkRequest smwr = (SupplierManagerTestWorkRequest) request;
            Object[] row = new Object[4];
            row[0] = smwr;
            row[1] = smwr.getSender().getEmployee().getName();
            row[2] = smwr.getReceiver() == null ? null : smwr.getReceiver().getEmployee().getName();
            row[3] = smwr.getStatus();

            model.addRow(row);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        requestTable = new javax.swing.JTable();
        acceptRequestJBtn = new javax.swing.JButton();
        showDetailsBtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        productDetailstable = new javax.swing.JTable();
        payAmountBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        totalAmountTxt = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        treasuryJTxt = new javax.swing.JTextField();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Finance Manager Work Area");

        requestTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "RequestDate", "Sender", "Receiver", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(requestTable);
        if (requestTable.getColumnModel().getColumnCount() > 0) {
            requestTable.getColumnModel().getColumn(0).setResizable(false);
            requestTable.getColumnModel().getColumn(1).setResizable(false);
            requestTable.getColumnModel().getColumn(2).setResizable(false);
            requestTable.getColumnModel().getColumn(3).setResizable(false);
        }

        acceptRequestJBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        acceptRequestJBtn.setText("Assign Request");
        acceptRequestJBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acceptRequestJBtnActionPerformed(evt);
            }
        });

        showDetailsBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        showDetailsBtn.setText("Show Details");
        showDetailsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showDetailsBtnActionPerformed(evt);
            }
        });

        productDetailstable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ProductName", "ModelNumber", "ProductPrice"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(productDetailstable);

        payAmountBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        payAmountBtn.setText("Pay Amount to Supplier");
        payAmountBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payAmountBtnActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Total Amount to be paid to Supplier is ");

        totalAmountTxt.setEditable(false);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Total Amount left in Treasury is ");

        treasuryJTxt.setEditable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(86, 86, 86)
                                .addComponent(jLabel1))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(acceptRequestJBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(75, 75, 75)
                                .addComponent(showDetailsBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(151, 151, 151)
                        .addComponent(payAmountBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(85, 85, 85)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(totalAmountTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 62, Short.MAX_VALUE)
                            .addComponent(treasuryJTxt))))
                .addGap(131, 131, 131))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(acceptRequestJBtn)
                    .addComponent(showDetailsBtn))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(totalAmountTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(treasuryJTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addComponent(payAmountBtn)
                .addGap(22, 22, 22))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void acceptRequestJBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceptRequestJBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = requestTable.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row");
            return;
        }
        WorkRequest request = (WorkRequest) requestTable.getValueAt(selectedRow, 0);
        request.setReceiver(userAccount);
        request.setStatus("Assigned");
        populateRequestTable();
    }//GEN-LAST:event_acceptRequestJBtnActionPerformed

    private void showDetailsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showDetailsBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = requestTable.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row");
            return;
        }
        WorkRequest request = (WorkRequest) requestTable.getValueAt(selectedRow, 0);
        SupplierManagerTestWorkRequest smwr = (SupplierManagerTestWorkRequest) request;
        if (smwr.getStatus().equalsIgnoreCase("Assigned") || (smwr.getStatus().equalsIgnoreCase("Amount Paid")
                || (smwr.getStatus().equalsIgnoreCase("Received")))) {
            DefaultTableModel model = (DefaultTableModel) productDetailstable.getModel();
            model.setRowCount(0);
            for (OrderItem orderItem : smwr.getOrder().getOrderlist()) {
                Object[] row = new Object[3];
                row[0] = orderItem.getProductItem().getProductName();
                row[1] = orderItem.getProductItem().getModelNumber();
                row[2] = orderItem.getProductItem().getPrice();
                model.addRow(row);
            }
            int finance = smwr.getTreasuryMoney();
            int total = 0;
            for (OrderItem oi : smwr.getOrder().getOrderlist()) {
                total = total + oi.getProductItem().getPrice();
            }
            int money = finance - total;
            smwr.setSupplierMoney(total);
            smwr.setTreasuryMoney(money);
            totalAmountTxt.setText(String.valueOf(total));
        }else{
                    JOptionPane.showMessageDialog(this, "The request must be assigned first");
        }
    }//GEN-LAST:event_showDetailsBtnActionPerformed

    private void payAmountBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payAmountBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = requestTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row");
            return;
        }
        WorkRequest request = (WorkRequest) requestTable.getValueAt(selectedRow, 0);
        SupplierManagerTestWorkRequest smwr = (SupplierManagerTestWorkRequest) request;
        if (smwr.getSender().equals("Amount Paid")) {
            JOptionPane.showMessageDialog(this, "The Amount is already paid");
        } else {
            smwr.setStatus("Amount Paid");
        }
        Organization org = null;
        for (Network nw : system.getNetworklist()) {
            for (Enterprise enterprise : nw.getEnterpriseDirectory().getEnterpriselist()) {
                if (enterprise.getEnterprisetype().getValue().equals(Enterprise.EnterpriseType.Supplier.getValue())) {
                    for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
                        System.out.println("The enterprise is" + enterprise);
                        if (organization instanceof SupplierOrganization) {
                            org = organization;
                            System.out.println("The enterprise is" + org);
                            break;
                        }
                    }
                    if (org != null) {
                        org.getWorkQueue().getWorkRequestList().add(smwr);
                        userAccount.getWorkQueue().getWorkRequestList().add(smwr);
                    }

                }
            }
        }
        treasuryJTxt.setText(String.valueOf(smwr.getTreasuryMoney()));
        JOptionPane.showMessageDialog(this, "Amount paid to supplier successfully");
        System.out.println("Amount paid to supplier successfully");
    }//GEN-LAST:event_payAmountBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton acceptRequestJBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton payAmountBtn;
    private javax.swing.JTable productDetailstable;
    private javax.swing.JTable requestTable;
    private javax.swing.JButton showDetailsBtn;
    private javax.swing.JTextField totalAmountTxt;
    private javax.swing.JTextField treasuryJTxt;
    // End of variables declaration//GEN-END:variables
}
