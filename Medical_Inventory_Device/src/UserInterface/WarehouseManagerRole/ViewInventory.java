/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.WarehouseManagerRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Enterprise.HospitalEnterprise;
import Business.Enterprise.WarehouseEnterprise;
import Business.FinalAssignment;
import Business.FinalAssignmentCatalog;
import Business.Inventory.InventoryItemAssignment;
import java.awt.CardLayout;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author hp
 */
public class ViewInventory extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private WarehouseEnterprise warehouseenterprise;
    private EcoSystem system;
    private FinalAssignmentCatalog fac;

    public ViewInventory(JPanel userProcessContainer,
            WarehouseEnterprise warehouseenterprise, EcoSystem system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.warehouseenterprise = warehouseenterprise;
        this.system = system;
        this.fac = EcoSystem.getFinalAssignmentCatalog();
        populatePreferredDate();
        populateInventoryTable();

    }

    private void populateInventoryTable() {
        DefaultTableModel dtm = (DefaultTableModel) viewInventoryTbl.getModel();
        dtm.setRowCount(0);
        for (FinalAssignment finalAssignment : fac.getFinalAssignmentList()) {
            String date = finalAssignment.getRoomAssignment().getRoomschedule().getDate();
            String selectedDate = (String) dateCombo.getSelectedItem();
            if (date.equals(selectedDate)) {
                Object row[] = new Object[6];
                row[0] = finalAssignment;
                row[1] = finalAssignment.getHospitalEnterprise().getName();
                row[2] = finalAssignment.getRoomAssignment().getRoom().getRoomnumber();
                row[3] = finalAssignment.getDoctor();
                row[4] = finalAssignment.getOperationId();
                row[5] = finalAssignment.getRoomAssignment().getRoomschedule().getDate();
                dtm.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        viewInventoryTbl = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        refreshBtn = new javax.swing.JButton();
        transferJBtn = new javax.swing.JButton();
        dateCombo = new javax.swing.JComboBox();
        backJBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        viewInventoryTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "PatientName", "HospitalNamw", "RoomNumber", "Doctor", "OperationId", "Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(viewInventoryTbl);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("View Inventory Work Area");

        refreshBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        refreshBtn.setText("Refresh");
        refreshBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshBtnActionPerformed(evt);
            }
        });

        transferJBtn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        transferJBtn.setText("Transfer");
        transferJBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transferJBtnActionPerformed(evt);
            }
        });

        dateCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        dateCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateComboActionPerformed(evt);
            }
        });

        backJBtn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        backJBtn.setText("<<Back");
        backJBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJBtnActionPerformed(evt);
            }
        });

        jLabel2.setText("Select Date");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(210, 210, 210)
                .addComponent(jLabel1)
                .addGap(190, 190, 190))
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(35, 35, 35)
                        .addComponent(dateCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(103, 103, 103)
                        .addComponent(refreshBtn)
                        .addGap(153, 153, 153)
                        .addComponent(transferJBtn))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 488, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(backJBtn))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dateCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(transferJBtn)
                    .addComponent(refreshBtn))
                .addGap(27, 27, 27)
                .addComponent(backJBtn)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void refreshBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshBtnActionPerformed
        // TODO add your handling code here:
        populateInventoryTable();
    }//GEN-LAST:event_refreshBtnActionPerformed

    private void populatePreferredDate() {
        dateCombo.removeAllItems();
        String preferredDate = new SimpleDateFormat("yyyy-MM-dd").format(new Date());
        for (int i = 2; i < 4; i++) {
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            Calendar calender = Calendar.getInstance();
            calender.add(Calendar.DATE, i); // it gives  the number of days we need to add
            preferredDate = dateFormat.format(calender.getTime());
            dateCombo.addItem(preferredDate);
        }
    }

    private void transferJBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transferJBtnActionPerformed
        // TODO add your handling code here:

        int selectedRow = viewInventoryTbl.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please Select a row");
            return;
        }
        FinalAssignment fa = (FinalAssignment) viewInventoryTbl.getValueAt(selectedRow, 0);
        for (InventoryItemAssignment iia : fa.getInventoryItemAssignmentcatalog().getInventoryItemAssignmentList()) {
            Enterprise e = iia.getInventoryItem().getEnterprise();
            HospitalEnterprise he = null;
            if (e instanceof HospitalEnterprise) {
                he = (HospitalEnterprise) e;
                HospitalEnterprise newHE = fa.getHospitalEnterprise();
                newHE.getInventoryCatalog().addHospitalInventoryItem(iia.getInventoryItem());
                he.getInventoryCatalog().removeInventoryItem(iia.getInventoryItem());
                iia.getInventoryItem().setEnterprise(newHE);
            }

        } 
        JOptionPane.showMessageDialog(this, "Transfer has been completed successfully");
        System.out.println("Transferring device to respective hospital");
    }//GEN-LAST:event_transferJBtnActionPerformed

    private void dateComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateComboActionPerformed
        // TODO add your handling code here:
        populateInventoryTable();
    }//GEN-LAST:event_dateComboActionPerformed

    private void backJBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJBtnActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJBtn;
    private javax.swing.JComboBox dateCombo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton refreshBtn;
    private javax.swing.JButton transferJBtn;
    private javax.swing.JTable viewInventoryTbl;
    // End of variables declaration//GEN-END:variables

}
