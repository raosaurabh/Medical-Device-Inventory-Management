/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.WarehouseManagerRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Enterprise.HospitalEnterprise;
import Business.Enterprise.WarehouseEnterprise;
import Business.FinalAssignmentCatalog;
import Business.Inventory.InventoryItem;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.Organization.SupplierOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.MaintainenceTestWorkRequest;
import java.awt.CardLayout;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author hp
 */
public class ViewUsageJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private UserAccount useraccount;
    private WarehouseEnterprise warehouseenterprise;
    private EcoSystem system;
    private FinalAssignmentCatalog fac;
    MaintainenceTestWorkRequest mtwr;

    public ViewUsageJPanel(JPanel userProcessContainer,
            WarehouseEnterprise enterprise,
            EcoSystem system, UserAccount useraccount) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.useraccount = useraccount;
        this.warehouseenterprise = enterprise;
        this.system = system;
        mtwr = new MaintainenceTestWorkRequest();
        fac = EcoSystem.getFinalAssignmentCatalog();
        populateNetworkComboBox();
        populatePreferredDate();
    }

    private void populateEnterpriseComboBox() {
        Network network = (Network) networkCombo.getSelectedItem();

        for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriselist()) {
            System.out.println("Inside enterprise loop");
            if (enterprise.getEnterprisetype().getValue().equalsIgnoreCase(Enterprise.EnterpriseType.Hospital.getValue())
                    || (enterprise.getEnterprisetype().getValue().equalsIgnoreCase(Enterprise.EnterpriseType.Warehouse.getValue()))) {
                enterpriseCombo.addItem(enterprise);
            }

        }
        System.out.println("out of for loop");
    }

    private void populateNetworkComboBox() {
        System.out.println("inside network combo");
        networkCombo.removeAllItems();
        for (Network network : system.getNetworklist()) {
            networkCombo.addItem(network);
        }
    }

    public void populateUsageTable() {
        DefaultTableModel model = (DefaultTableModel) itemUsageTbl.getModel();
        model.setRowCount(0);

        Enterprise e = (Enterprise) enterpriseCombo.getSelectedItem();

        if (e.getEnterprisetype().getValue().equals(Enterprise.EnterpriseType.Hospital.getValue())) {
            HospitalEnterprise he = (HospitalEnterprise) e;
            for (InventoryItem inventoryItem : he.getInventoryCatalog().getInventoryItemList()) {
                Object row[] = new Object[3];
                row[0] = inventoryItem;
                row[1] = inventoryItem.getOrderitem().getProductItem().getSerialNumber();
                row[2] = inventoryItem.getUsageCounter();
                model.addRow(row);

            }
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        itemUsageTbl = new javax.swing.JTable();
        maintainenceJBtn = new javax.swing.JButton();
        scheduleMaintainenceBtn = new javax.swing.JButton();
        networkCombo = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        enterpriseCombo = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        dateCombo = new javax.swing.JComboBox();
        viewHistoryBtn = new javax.swing.JButton();
        confirmMaintainence = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("View Inventory Item Usage");

        itemUsageTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "InventoryItemName", "SerialNumber", "UsageCount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(itemUsageTbl);

        maintainenceJBtn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        maintainenceJBtn.setText("Send for Maintainence");
        maintainenceJBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maintainenceJBtnActionPerformed(evt);
            }
        });

        scheduleMaintainenceBtn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        scheduleMaintainenceBtn.setText("Create Maintainence Schedule");
        scheduleMaintainenceBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scheduleMaintainenceBtnActionPerformed(evt);
            }
        });

        networkCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                networkComboActionPerformed(evt);
            }
        });

        jLabel5.setText("Select Network");

        enterpriseCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterpriseComboActionPerformed(evt);
            }
        });

        jLabel6.setText("Select Enterprise");

        jLabel2.setText("Select Date");

        dateCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        viewHistoryBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        viewHistoryBtn.setText(" View History");
        viewHistoryBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewHistoryBtnActionPerformed(evt);
            }
        });

        confirmMaintainence.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        confirmMaintainence.setText("Confirm Maintainence");
        confirmMaintainence.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmMaintainenceActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton1.setText("<<Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(networkCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(enterpriseCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(dateCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(maintainenceJBtn)
                        .addGap(32, 32, 32)
                        .addComponent(scheduleMaintainenceBtn)
                        .addGap(18, 18, 18)
                        .addComponent(viewHistoryBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(146, 146, 146)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(jButton1)
                        .addGap(109, 109, 109)
                        .addComponent(confirmMaintainence)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(networkCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(enterpriseCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(dateCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(maintainenceJBtn)
                    .addComponent(scheduleMaintainenceBtn)
                    .addComponent(viewHistoryBtn))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(confirmMaintainence)
                    .addComponent(jButton1))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void maintainenceJBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maintainenceJBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = itemUsageTbl.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a Row");
            return;
        }
        InventoryItem inventoryItem = (InventoryItem) itemUsageTbl.getValueAt(selectedRow, 0);

        mtwr.setStatus("Sent for Maintainence");
        mtwr.setInventoryItem(inventoryItem);
        mtwr.setRequestDate(new Date());
        mtwr.setSender(useraccount);
        mtwr.getInventoryItem().setMaintainenceStatus("Under Maintainence");
        mtwr.getMhc().addInventoryItem(inventoryItem);
        mtwr.getMhc().setInventoryItem(inventoryItem);
        mtwr.getMhc().getInventoryItem().setLogDate(String.valueOf(new Date()));

        Organization org = null;
        for (Network n : system.getNetworklist()) {
            for (Enterprise e : n.getEnterpriseDirectory().getEnterpriselist()) {
                if (e.getEnterprisetype().getValue().equals(Enterprise.EnterpriseType.Supplier.getValue())) {
                    for (Organization organization : e.getOrganizationDirectory().getOrganizationList()) {
                        if (organization instanceof SupplierOrganization) {
                            org = organization;
                            break;
                        }
                    }
                }
            }
        }
        if (org != null) {
            System.out.println("Org is not null");
            org.getWorkQueue().getWorkRequestList().add(mtwr);
            useraccount.getWorkQueue().getWorkRequestList().add(mtwr);
        }
        JOptionPane.showMessageDialog(this, "InventoryItem" +inventoryItem+ "is sent for maintainence");
        System.out.println("The device is sent to supplier for Maintainence");
    }//GEN-LAST:event_maintainenceJBtnActionPerformed

    private void scheduleMaintainenceBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scheduleMaintainenceBtnActionPerformed
        // TODO add your handling code here:

        String date = (String) dateCombo.getSelectedItem();
        int selectedRow = itemUsageTbl.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a Row");
            return;
        }
        InventoryItem inventoryItem = (InventoryItem) itemUsageTbl.getValueAt(selectedRow, 0);
        inventoryItem.setMaintainenceDate(date);
        JOptionPane.showMessageDialog(this, "The inventoryItem" +inventoryItem+ "is scheduled for maintainence on" +date);
        System.out.println( "The inventoryItem" +inventoryItem+ "is scheduled for maintainence on" +date);
    }//GEN-LAST:event_scheduleMaintainenceBtnActionPerformed

    private void networkComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_networkComboActionPerformed
        // TODO add your handling code here:

        populateEnterpriseComboBox();
    }//GEN-LAST:event_networkComboActionPerformed

    private void enterpriseComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterpriseComboActionPerformed
        populateUsageTable();

    }//GEN-LAST:event_enterpriseComboActionPerformed

    private void viewHistoryBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewHistoryBtnActionPerformed
        // TODO add your handling code here:
        ViewMaintainenceHistoryWorkArea vmh = new ViewMaintainenceHistoryWorkArea(userProcessContainer, warehouseenterprise, system, useraccount, mtwr);
        userProcessContainer.add("ViewHistory", vmh);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);


    }//GEN-LAST:event_viewHistoryBtnActionPerformed

    private void confirmMaintainenceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmMaintainenceActionPerformed
        // TODO add your handling code here:
        String date = (String) dateCombo.getSelectedItem();
        int selectedRow = itemUsageTbl.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a Row");
            return;
        }
        InventoryItem inventoryItem = (InventoryItem) itemUsageTbl.getValueAt(selectedRow, 0);
        inventoryItem.setMaintainenceDate("default");
        JOptionPane.showMessageDialog(this, "The maintinence on" +inventoryItem+ "is completed successfully");
        System.out.println("The maintinence on" +inventoryItem+ "is completed successfully");

    }//GEN-LAST:event_confirmMaintainenceActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void populatePreferredDate() {
        dateCombo.removeAllItems();
        String preferredDate = new SimpleDateFormat("yyyy-MM-dd").format(new Date());
        for (int i = 0; i < 60; i++) {
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            Calendar calender = Calendar.getInstance();
            calender.add(Calendar.DATE, i); // it gives  the number of days we need to add
            preferredDate = dateFormat.format(calender.getTime());
            dateCombo.addItem(preferredDate);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton confirmMaintainence;
    private javax.swing.JComboBox dateCombo;
    private javax.swing.JComboBox enterpriseCombo;
    private javax.swing.JTable itemUsageTbl;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton maintainenceJBtn;
    private javax.swing.JComboBox networkCombo;
    private javax.swing.JButton scheduleMaintainenceBtn;
    private javax.swing.JButton viewHistoryBtn;
    // End of variables declaration//GEN-END:variables
}
