/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.PurchaseManagerRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Enterprise.PurchaseEnterprise;
import Business.Organization.Organization;
import Business.Organization.PurchaseOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.OrganizationManagerTestWorkRequest_wrong;
import Business.WorkQueue.PurchaseManagerTestWorkRequest;
import Business.WorkQueue.ReceptionistTestWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author hp
 */
public class PurchaseManagerWorkAreaJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private UserAccount useraccount;
    private PurchaseOrganization purchaseOrganization;
    private PurchaseEnterprise enterprise;
    private EcoSystem system;

    public PurchaseManagerWorkAreaJPanel(JPanel userProcessContainer,
            UserAccount useraccount, PurchaseOrganization organization, PurchaseEnterprise enterprise,
            EcoSystem system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.useraccount = useraccount;
        this.purchaseOrganization = organization;
        this.enterprise = enterprise;
        this.system = system;
        populateRequestTable();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        acceptRequestJBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        browseProductJBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        requestJTbl = new javax.swing.JTable();

        jButton1.setText("jButton1");

        acceptRequestJBtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        acceptRequestJBtn.setText("Assign Request");
        acceptRequestJBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acceptRequestJBtnActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Purchase Manager Work Area Panel");

        browseProductJBtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        browseProductJBtn.setText("Browse Products >>");
        browseProductJBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseProductJBtnActionPerformed(evt);
            }
        });

        requestJTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Date", "Sender", "Receiver", "Status", "HospitalId"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(requestJTbl);
        if (requestJTbl.getColumnModel().getColumnCount() > 0) {
            requestJTbl.getColumnModel().getColumn(0).setResizable(false);
            requestJTbl.getColumnModel().getColumn(1).setResizable(false);
            requestJTbl.getColumnModel().getColumn(2).setResizable(false);
            requestJTbl.getColumnModel().getColumn(3).setResizable(false);
            requestJTbl.getColumnModel().getColumn(4).setResizable(false);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(167, 167, 167)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(126, 126, 126)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(103, 103, 103)
                        .addComponent(acceptRequestJBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(66, 66, 66)
                        .addComponent(browseProductJBtn)))
                .addGap(119, 119, 119))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addGap(36, 36, 36)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(acceptRequestJBtn)
                    .addComponent(browseProductJBtn))
                .addGap(76, 76, 76))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void browseProductJBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseProductJBtnActionPerformed
        // TODO add your handling code here:

        int selectedRow = requestJTbl.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Kindly select a row");
            return;
        }

        WorkRequest request = (WorkRequest) requestJTbl.getValueAt(selectedRow, 0);
        PurchaseManagerTestWorkRequest pmwr = (PurchaseManagerTestWorkRequest) request;
        if (pmwr.getStatus().equalsIgnoreCase("Assigned")) {
            BrowseProductJPanel bpjp = new BrowseProductJPanel(userProcessContainer, system, purchaseOrganization, useraccount, enterprise, pmwr);
            userProcessContainer.add(" BrowseProduct", bpjp);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        } else {
            JOptionPane.showMessageDialog(this, "The request must be assigned first");
        }
    }//GEN-LAST:event_browseProductJBtnActionPerformed

    private void acceptRequestJBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceptRequestJBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = requestJTbl.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Kindly select a row");
            return;
        }
        WorkRequest request = (WorkRequest) requestJTbl.getValueAt(selectedRow, 0);
        if (request.getStatus().equalsIgnoreCase("Purchase Completed")) {
            JOptionPane.showMessageDialog(this, "Request already completed");
        } else {
            request.setReceiver(useraccount);
            request.setStatus("Assigned");
            populateRequestTable();
        }

    }//GEN-LAST:event_acceptRequestJBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton acceptRequestJBtn;
    private javax.swing.JButton browseProductJBtn;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable requestJTbl;
    // End of variables declaration//GEN-END:variables

    public void populateRequestTable() {

        DefaultTableModel model = (DefaultTableModel) requestJTbl.getModel();

        model.setRowCount(0);
        for (WorkRequest request : purchaseOrganization.getWorkQueue().getWorkRequestList()) {
            PurchaseManagerTestWorkRequest puTest = (PurchaseManagerTestWorkRequest) request;
            Object[] row = new Object[5];
            row[0] = puTest;
            row[1] = puTest.getSender().getEmployee().getName();
            row[2] = puTest.getReceiver() == null ? null : puTest.getReceiver().getEmployee().getName();
            row[3] = puTest.getStatus();
            row[4] = puTest.getEnterpriID();
            model.addRow(row);
        }

    }
}
