/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.CareTeamRole;

import Business.EcoSystem;
import Business.Enterprise.HospitalEnterprise;
import Business.Organization.CareTeamOrganization;
import Business.Organization.ReceptionistOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.ReceptionistTestWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

public class CareTeamWorkAreaJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private HospitalEnterprise hospitalEnterprise;
    private CareTeamOrganization careteamOrganization;
    private EcoSystem system;
    private UserAccount useraccount;

    public CareTeamWorkAreaJPanel(JPanel userProcessContainer, UserAccount useraccount, CareTeamOrganization careteamOrganization,
            HospitalEnterprise hospitalEnterprise, EcoSystem system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.useraccount = useraccount;
        this.careteamOrganization = careteamOrganization;
        this.hospitalEnterprise = hospitalEnterprise;
        this.system = system;
        populateRequestTable();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        viewRequestsJTbl = new javax.swing.JTable();
        createNewRequestJBtn = new javax.swing.JButton();
        assignBtn = new javax.swing.JButton();
        viewRequestsJBtn = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("CareTeam Work Area");

        viewRequestsJTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Surgery", "Sender", "Receiver", "Status", "Date", "HospitalId"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(viewRequestsJTbl);
        if (viewRequestsJTbl.getColumnModel().getColumnCount() > 0) {
            viewRequestsJTbl.getColumnModel().getColumn(0).setResizable(false);
            viewRequestsJTbl.getColumnModel().getColumn(1).setResizable(false);
            viewRequestsJTbl.getColumnModel().getColumn(2).setResizable(false);
            viewRequestsJTbl.getColumnModel().getColumn(3).setResizable(false);
            viewRequestsJTbl.getColumnModel().getColumn(4).setResizable(false);
            viewRequestsJTbl.getColumnModel().getColumn(5).setResizable(false);
        }

        createNewRequestJBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        createNewRequestJBtn.setText("Send list to Doctor");
        createNewRequestJBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createNewRequestJBtnActionPerformed(evt);
            }
        });

        assignBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        assignBtn.setText("Assign to me");
        assignBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignBtnActionPerformed(evt);
            }
        });

        viewRequestsJBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        viewRequestsJBtn.setText("View Requests");
        viewRequestsJBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewRequestsJBtnActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton1.setText("Refresh");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(175, 175, 175)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(176, 176, 176)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(createNewRequestJBtn)
                            .addComponent(viewRequestsJBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(assignBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE))
                .addGap(123, 123, 123))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(assignBtn)
                .addGap(18, 18, 18)
                .addComponent(createNewRequestJBtn)
                .addGap(18, 18, 18)
                .addComponent(viewRequestsJBtn)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    public void populateRequestTable() {

        DefaultTableModel model = (DefaultTableModel) viewRequestsJTbl.getModel();

        model.setRowCount(0);
        for (WorkRequest request : careteamOrganization.getWorkQueue().getWorkRequestList()) {
            ReceptionistTestWorkRequest receptiontest = (ReceptionistTestWorkRequest) request;
            Object[] row = new Object[6];
            row[0] = receptiontest;
            row[1] = receptiontest.getSender();
            row[2] = receptiontest.getReceiver();
            row[3] = receptiontest.getStatus();
            row[4] = receptiontest.getPreferredDate();
            row[5] = receptiontest.getEnterpriseId();

            model.addRow(row);
        }

    }


    private void createNewRequestJBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createNewRequestJBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = viewRequestsJTbl.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row");
            return;
        }

        WorkRequest request = (WorkRequest) viewRequestsJTbl.getValueAt(selectedRow, 0);
        if (request.getStatus().equalsIgnoreCase("Processing")) {
            JOptionPane.showMessageDialog(this, "The request is already processed");
        } else if(request.getStatus().equalsIgnoreCase("Sent")){
                    JOptionPane.showMessageDialog(this, "Kindly Assign request first");
        }
        
        else {
            CreateDoctorRequestJPanel cnjp = new CreateDoctorRequestJPanel(userProcessContainer, useraccount, careteamOrganization, hospitalEnterprise, (ReceptionistTestWorkRequest) request);
            userProcessContainer.add("createnewRequest", cnjp);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
            System.out.println("Creating request for Doctor");

        }


    }//GEN-LAST:event_createNewRequestJBtnActionPerformed

    private void assignBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignBtnActionPerformed
        int selectedRow = viewRequestsJTbl.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Kindly select a row");
            return;
        }
        WorkRequest request = (WorkRequest) viewRequestsJTbl.getValueAt(selectedRow, 0);
        if (request.getStatus().equalsIgnoreCase("Processing")) {
            JOptionPane.showMessageDialog(this, "Sorry!!! Processed request cannot be assigned again");
        } else if (request.getStatus().equalsIgnoreCase("Assigned")) {
            JOptionPane.showMessageDialog(this, "Sorry!!! Request already assigned");

        } else {
            request.setReceiver(useraccount);
            request.setStatus("Assigned");
            populateRequestTable();
        }

    }//GEN-LAST:event_assignBtnActionPerformed

    private void viewRequestsJBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewRequestsJBtnActionPerformed

        int selectedRow = viewRequestsJTbl.getSelectedRow();
        if (selectedRow < 0) {
            return;
        }
        ReceptionistTestWorkRequest request = (ReceptionistTestWorkRequest) viewRequestsJTbl.getValueAt(selectedRow, 0);
        int enterpriseId = request.getEnterpriseId();
        ViewAllRequestsJPanel var = new ViewAllRequestsJPanel(userProcessContainer, useraccount, careteamOrganization, hospitalEnterprise, system, enterpriseId);
        userProcessContainer.add("viewRequests", var);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);

    }//GEN-LAST:event_viewRequestsJBtnActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        populateRequestTable();
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignBtn;
    private javax.swing.JButton createNewRequestJBtn;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton viewRequestsJBtn;
    private javax.swing.JTable viewRequestsJTbl;
    // End of variables declaration//GEN-END:variables
}
