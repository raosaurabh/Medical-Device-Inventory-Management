/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.CareTeamRole;

import Business.EcoSystem;
import Business.Enterprise.HospitalEnterprise;
import Business.Enterprise.RequiredDevice;
import Business.IntegerVerifier;
import Business.Organization.CareTeamOrganization;
import Business.Organization.DoctorOrganization;
import Business.Organization.Organization;
import Business.StringVerifier;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.OrganizationManagerWorkRequest;
import Business.WorkQueue.ReceptionistTestWorkRequest;
import java.awt.CardLayout;
import java.util.Date;
import javax.swing.InputVerifier;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author hp
 */
public class CreateDoctorRequestJPanel extends javax.swing.JPanel {
    
    private JPanel userProcessContainer;
    private HospitalEnterprise hospitalEnterprise;
    private CareTeamOrganization careteamOrganization;
    private ReceptionistTestWorkRequest request;
    private UserAccount useraccount;
    private OrganizationManagerWorkRequest omwr;
    
    public CreateDoctorRequestJPanel(JPanel userProcessContainer, UserAccount useraccount, CareTeamOrganization careteamOrganization,
            HospitalEnterprise hospitalEnterprise, ReceptionistTestWorkRequest request) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.useraccount = useraccount;
        this.careteamOrganization = careteamOrganization;
        this.hospitalEnterprise = hospitalEnterprise;
        this.request = request;
        omwr = this.useraccount.getWorkQueue().addOrganizationRequest();
        InputVerifier integerverifier = new IntegerVerifier();
        InputVerifier stringverifier = new StringVerifier();
        deviceNameTxtFeild.setInputVerifier(stringverifier);
        quantityTxtFeild.setInputVerifier(integerverifier);
        DefaultTableModel model = (DefaultTableModel) deviceTbl.getModel();
        model.setRowCount(0);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    public void populateProductTable() {
        DefaultTableModel model = (DefaultTableModel) deviceTbl.getModel();
        
        model.setRowCount(0);
        for (RequiredDevice rd : omwr.getRequireddeviceCatalog().getRequiredDeviceList()) {
            Object[] row = new Object[2];
            row[0] = rd.getName();
            row[1] = rd.getQuantity();
            model.addRow(row);
        }
        
    }
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        deviceTbl = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        deviceNameTxtFeild = new javax.swing.JTextField();
        quantityTxtFeild = new javax.swing.JTextField();
        addDeviceJBtn = new javax.swing.JButton();
        submitRequestJBtn = new javax.swing.JButton();
        backJBtn = new javax.swing.JButton();

        deviceTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "DeviceName", "Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(deviceTbl);
        if (deviceTbl.getColumnModel().getColumnCount() > 0) {
            deviceTbl.getColumnModel().getColumn(0).setResizable(false);
            deviceTbl.getColumnModel().getColumn(1).setResizable(false);
        }

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Create Request for Medical Devices");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("DeviceName");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Quantity ");

        quantityTxtFeild.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quantityTxtFeildActionPerformed(evt);
            }
        });

        addDeviceJBtn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        addDeviceJBtn.setText("Add Device");
        addDeviceJBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addDeviceJBtnActionPerformed(evt);
            }
        });

        submitRequestJBtn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        submitRequestJBtn.setText("Submit Request");
        submitRequestJBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitRequestJBtnActionPerformed(evt);
            }
        });

        backJBtn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        backJBtn.setText("<< Back");
        backJBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(86, 86, 86)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addComponent(backJBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(62, 62, 62)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(deviceNameTxtFeild, javax.swing.GroupLayout.DEFAULT_SIZE, 77, Short.MAX_VALUE)
                                    .addComponent(quantityTxtFeild)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(48, 48, 48)
                                .addComponent(submitRequestJBtn))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(127, 127, 127)
                        .addComponent(addDeviceJBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(jLabel1)))
                .addGap(20, 20, 20))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(deviceNameTxtFeild, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(quantityTxtFeild, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(addDeviceJBtn)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backJBtn)
                    .addComponent(submitRequestJBtn))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void quantityTxtFeildActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quantityTxtFeildActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_quantityTxtFeildActionPerformed

    private void addDeviceJBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addDeviceJBtnActionPerformed
        // TODO add your handling code here:
        if (deviceNameTxtFeild.getText().length() > 0 && quantityTxtFeild.getText().length() > 0) {
            RequiredDevice rd = omwr.getRequireddeviceCatalog().addDevice();
            String name = deviceNameTxtFeild.getText();
            int quantity = Integer.parseInt(quantityTxtFeild.getText());
            rd.setName(name);
            rd.setQuantity(quantity);
            populateProductTable();
            deviceNameTxtFeild.setText("");
            quantityTxtFeild.setText("");
        } else {
            JOptionPane.showMessageDialog(this, "The textbox cannot be blank ");
        }
    }//GEN-LAST:event_addDeviceJBtnActionPerformed

    private void submitRequestJBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitRequestJBtnActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) deviceTbl.getModel();
        if (model.getRowCount() > 0) {
            omwr.setSender(useraccount);
            omwr.setPatient(request.getPatient());
            omwr.setRequestDate(new Date());
            omwr.setStatus("Pending for Approval");
            request.setStatus("Processing");
            Organization org = null;
            for (Organization organization : hospitalEnterprise.getOrganizationDirectory().getOrganizationList()) {
                if (organization instanceof DoctorOrganization) {
                    org = organization;
                    break;
                }
            }
            if (org != null) {
                System.out.println("Org is not null");
                org.getWorkQueue().getWorkRequestList().add(omwr);
                //useraccount.getWorkQueue().getWorkRequestList().add(omwr);
            }
            
            model.setRowCount(0);
        } else {
            JOptionPane.showMessageDialog(this, "Kindly add a product first");
        }
    }//GEN-LAST:event_submitRequestJBtnActionPerformed

    private void backJBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJBtnActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addDeviceJBtn;
    private javax.swing.JButton backJBtn;
    private javax.swing.JTextField deviceNameTxtFeild;
    private javax.swing.JTable deviceTbl;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField quantityTxtFeild;
    private javax.swing.JButton submitRequestJBtn;
    // End of variables declaration//GEN-END:variables
}
